"""Initial

Revision ID: f21f871413f0
Revises: 
Create Date: 2025-05-09 01:43:02.639188

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f21f871413f0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('document',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('upload_date', sa.DateTime(), nullable=False),
    sa.Column('theme_id', sa.Integer(), nullable=True),
    sa.Column('uploader_id', sa.Integer(), nullable=False),
    sa.Column('file_type', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['theme_id'], ['theme.id'], ),
    sa.ForeignKeyConstraint(['uploader_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('filename')
    )
    with op.batch_alter_table('document', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_document_theme_id'), ['theme_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_document_uploader_id'), ['uploader_id'], unique=False)

    with op.batch_alter_table('activite', schema=None) as batch_op:
        batch_op.alter_column('date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.create_index(batch_op.f('ix_activite_date'), ['date'], unique=False)
        batch_op.create_index(batch_op.f('ix_activite_type'), ['type'], unique=False)

    with op.batch_alter_table('inscription', schema=None) as batch_op:
        batch_op.alter_column('date_inscription',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.alter_column('statut',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('validation_responsable',
               existing_type=sa.BOOLEAN(),
               nullable=False)
        batch_op.alter_column('notification_envoyee',
               existing_type=sa.BOOLEAN(),
               nullable=False)
        batch_op.create_index(batch_op.f('ix_inscription_participant_id'), ['participant_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_inscription_session_id'), ['session_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_inscription_statut'), ['statut'], unique=False)

    with op.batch_alter_table('liste_attente', schema=None) as batch_op:
        batch_op.alter_column('date_inscription',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.alter_column('notification_envoyee',
               existing_type=sa.BOOLEAN(),
               nullable=False)
        batch_op.create_index(batch_op.f('ix_liste_attente_participant_id'), ['participant_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_liste_attente_session_id'), ['session_id'], unique=False)

    with op.batch_alter_table('participant', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_participant_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_participant_service_id'), ['service_id'], unique=False)

    with op.batch_alter_table('salle', schema=None) as batch_op:
        batch_op.alter_column('capacite',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.create_unique_constraint(None, ['nom'])

    with op.batch_alter_table('service', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['nom'])

    with op.batch_alter_table('session', schema=None) as batch_op:
        batch_op.alter_column('max_participants',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.create_index(batch_op.f('ix_session_date'), ['date'], unique=False)
        batch_op.create_index(batch_op.f('ix_session_salle_id'), ['salle_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_session_theme_id'), ['theme_id'], unique=False)

    with op.batch_alter_table('theme', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['nom'])

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('role',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.drop_constraint('user_username_key', type_='unique')
        batch_op.create_index(batch_op.f('ix_user_role'), ['role'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_role'))
        batch_op.create_unique_constraint('user_username_key', ['username'])
        batch_op.alter_column('role',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)

    with op.batch_alter_table('theme', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('session', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_session_theme_id'))
        batch_op.drop_index(batch_op.f('ix_session_salle_id'))
        batch_op.drop_index(batch_op.f('ix_session_date'))
        batch_op.alter_column('max_participants',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('service', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('salle', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('capacite',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('participant', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_participant_service_id'))
        batch_op.drop_index(batch_op.f('ix_participant_email'))

    with op.batch_alter_table('liste_attente', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_liste_attente_session_id'))
        batch_op.drop_index(batch_op.f('ix_liste_attente_participant_id'))
        batch_op.alter_column('notification_envoyee',
               existing_type=sa.BOOLEAN(),
               nullable=True)
        batch_op.alter_column('date_inscription',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)

    with op.batch_alter_table('inscription', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_inscription_statut'))
        batch_op.drop_index(batch_op.f('ix_inscription_session_id'))
        batch_op.drop_index(batch_op.f('ix_inscription_participant_id'))
        batch_op.alter_column('notification_envoyee',
               existing_type=sa.BOOLEAN(),
               nullable=True)
        batch_op.alter_column('validation_responsable',
               existing_type=sa.BOOLEAN(),
               nullable=True)
        batch_op.alter_column('statut',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('date_inscription',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)

    with op.batch_alter_table('activite', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_activite_type'))
        batch_op.drop_index(batch_op.f('ix_activite_date'))
        batch_op.alter_column('date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)

    with op.batch_alter_table('document', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_document_uploader_id'))
        batch_op.drop_index(batch_op.f('ix_document_theme_id'))

    op.drop_table('document')
    # ### end Alembic commands ###
